{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cisco\\\\Desktop\\\\Employee-Polls\\\\polls\\\\src\\\\components\\\\QuestionDetail.js\",\n    _s = $RefreshSig$();\n\nimport e from \"express\";\nimport { useState, useEffect } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { handleSaveQuestionAnswer } from \"../actions/questions\";\nimport { formatDate } from \"../utils/helpers\";\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuestionDetail(_ref) {\n  _s();\n\n  let {\n    questions,\n    authedUser,\n    users\n  } = _ref;\n  const dispatch = useDispatch();\n  let questionId = window.location.pathname.split(\"/\")[2];\n  let question = questions.find(question => question.id === questionId);\n  let author = users[question.author];\n  let optionOne = question.optionOne;\n  let optionTwo = question.optionTwo;\n  let timestamp = question.timestamp;\n  const [selectOption, setSelectOption] = useState({\n    optionOne: \"\",\n    optionTwo: \"\"\n  });\n  const answer = {\n    authedUser: authedUser,\n    qid: questionId,\n    answer: e.target.value\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(handleSaveQuestionAnswer(authedUser, questionId, answer));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-detail\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-detail-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-detail-header-left\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: author.avatarURL,\n            alt: `Avatar of ${author.name}`,\n            className: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [author.name, \" asks:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-detail-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuestionDetail, \"PAa4d1/A0S16F+6ANbvkce6N5vM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = QuestionDetail;\n\nconst mapStateToProps = _ref2 => {\n  let {\n    authedUser,\n    users,\n    questions\n  } = _ref2;\n  return {\n    authedUser,\n    users,\n    questions: Object.values(questions)\n  };\n};\n\nexport default connect(mapStateToProps)(QuestionDetail);\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionDetail\");","map":{"version":3,"names":["e","useState","useEffect","connect","useDispatch","useSelector","handleSaveQuestionAnswer","formatDate","Nav","QuestionDetail","questions","authedUser","users","dispatch","questionId","window","location","pathname","split","question","find","id","author","optionOne","optionTwo","timestamp","selectOption","setSelectOption","answer","qid","target","value","handleSubmit","preventDefault","avatarURL","name","mapStateToProps","Object","values"],"sources":["C:/Users/Cisco/Desktop/Employee-Polls/polls/src/components/QuestionDetail.js"],"sourcesContent":["import e from \"express\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { handleSaveQuestionAnswer } from \"../actions/questions\";\r\nimport { formatDate } from \"../utils/helpers\";\r\n\r\nimport Nav from \"./Nav\";\r\n\r\nfunction QuestionDetail({ questions, authedUser, users }) {\r\n  const dispatch = useDispatch();\r\n\r\n  let questionId = window.location.pathname.split(\"/\")[2];\r\n  let question = questions.find((question) => question.id === questionId);\r\n  let author = users[question.author];\r\n  let optionOne = question.optionOne;\r\n  let optionTwo = question.optionTwo;\r\n  let timestamp = question.timestamp;\r\n\r\n  const [selectOption, setSelectOption] = useState({\r\n    optionOne: \"\",\r\n    optionTwo: \"\",\r\n  });\r\n\r\n  const answer = {\r\n    authedUser: authedUser,\r\n    qid: questionId,\r\n    answer: e.target.value,\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(handleSaveQuestionAnswer(authedUser, questionId, answer));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Nav />\r\n      </div>\r\n      <div className='question-detail'>\r\n        <div className='question-detail-header'>\r\n          <div className='question-detail-header-left'>\r\n            <img\r\n              src={author.avatarURL}\r\n              alt={`Avatar of ${author.name}`}\r\n              className='avatar'\r\n            />\r\n          </div>\r\n          <span>{author.name} asks:</span>\r\n        </div>\r\n        <div className='question-detail-body'>\r\n          <form></form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ authedUser, users, questions }) => {\r\n  return {\r\n    authedUser,\r\n    users,\r\n    questions: Object.values(questions),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(QuestionDetail);\r\n"],"mappings":";;;AAAA,OAAOA,CAAP,MAAc,SAAd;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,SAASC,cAAT,OAA0D;EAAA;;EAAA,IAAlC;IAAEC,SAAF;IAAaC,UAAb;IAAyBC;EAAzB,CAAkC;EACxD,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;EAEA,IAAIU,UAAU,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAjB;EACA,IAAIC,QAAQ,GAAGT,SAAS,CAACU,IAAV,CAAgBD,QAAD,IAAcA,QAAQ,CAACE,EAAT,KAAgBP,UAA7C,CAAf;EACA,IAAIQ,MAAM,GAAGV,KAAK,CAACO,QAAQ,CAACG,MAAV,CAAlB;EACA,IAAIC,SAAS,GAAGJ,QAAQ,CAACI,SAAzB;EACA,IAAIC,SAAS,GAAGL,QAAQ,CAACK,SAAzB;EACA,IAAIC,SAAS,GAAGN,QAAQ,CAACM,SAAzB;EAEA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkC1B,QAAQ,CAAC;IAC/CsB,SAAS,EAAE,EADoC;IAE/CC,SAAS,EAAE;EAFoC,CAAD,CAAhD;EAKA,MAAMI,MAAM,GAAG;IACbjB,UAAU,EAAEA,UADC;IAEbkB,GAAG,EAAEf,UAFQ;IAGbc,MAAM,EAAE5B,CAAC,CAAC8B,MAAF,CAASC;EAHJ,CAAf;;EAMA,MAAMC,YAAY,GAAIhC,CAAD,IAAO;IAC1BA,CAAC,CAACiC,cAAF;IACApB,QAAQ,CAACP,wBAAwB,CAACK,UAAD,EAAaG,UAAb,EAAyBc,MAAzB,CAAzB,CAAR;EACD,CAHD;;EAKA,oBACE;IAAA,wBACE;MAAA,uBACE,QAAC,GAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAK,SAAS,EAAC,iBAAf;MAAA,wBACE;QAAK,SAAS,EAAC,wBAAf;QAAA,wBACE;UAAK,SAAS,EAAC,6BAAf;UAAA,uBACE;YACE,GAAG,EAAEN,MAAM,CAACY,SADd;YAEE,GAAG,EAAG,aAAYZ,MAAM,CAACa,IAAK,EAFhC;YAGE,SAAS,EAAC;UAHZ;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAQE;UAAA,WAAOb,MAAM,CAACa,IAAd;QAAA;UAAA;UAAA;UAAA;QAAA,QARF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAWE;QAAK,SAAS,EAAC,sBAAf;QAAA,uBACE;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAXF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD;;GAhDQ1B,c;UACUL,W;;;KADVK,c;;AAkDT,MAAM2B,eAAe,GAAG,SAAsC;EAAA,IAArC;IAAEzB,UAAF;IAAcC,KAAd;IAAqBF;EAArB,CAAqC;EAC5D,OAAO;IACLC,UADK;IAELC,KAFK;IAGLF,SAAS,EAAE2B,MAAM,CAACC,MAAP,CAAc5B,SAAd;EAHN,CAAP;AAKD,CAND;;AAQA,eAAeP,OAAO,CAACiC,eAAD,CAAP,CAAyB3B,cAAzB,CAAf"},"metadata":{},"sourceType":"module"}