{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cisco\\\\Desktop\\\\Employee-Polls\\\\polls\\\\src\\\\components\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport NewQuestionContainer from \"./NewQuestionContainer\";\nimport CompletedQuestionContainer from \"./CompletedQuestionContainer\";\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = _ref => {\n  _s();\n\n  let {\n    authedUser,\n    questions\n  } = _ref;\n  const [newQuestions, setNewQuestions] = useState([]);\n  const [completedQuestions, setCompletedQuestions] = useState([]);\n  useEffect(() => {\n    setCompletedQuestions(questions.filter(question => question.optionOne.votes.includes(authedUser) || question.optionTwo.votes.includes(authedUser)).sort((a, b) => b.timestamp - a.timestamp));\n    setNewQuestions(questions.filter(question => !question.optionOne.votes.includes(authedUser) && !question.optionTwo.votes.includes(authedUser)).sort((a, b) => b.timestamp - a.timestamp));\n  }, [authedUser, questions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(NewQuestionContainer, {\n        newQuestions: newQuestions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"HpQegTBf9augsWLKZh2Sehs/CVg=\");\n\n_c = Dashboard;\n\nconst mapStateToProps = _ref2 => {\n  let {\n    questions,\n    authedUser\n  } = _ref2;\n  return {\n    questions: Object.values(questions),\n    authedUser\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["connect","useEffect","useState","NewQuestionContainer","CompletedQuestionContainer","Nav","Dashboard","authedUser","questions","newQuestions","setNewQuestions","completedQuestions","setCompletedQuestions","filter","question","optionOne","votes","includes","optionTwo","sort","a","b","timestamp","mapStateToProps","Object","values"],"sources":["C:/Users/Cisco/Desktop/Employee-Polls/polls/src/components/Dashboard.js"],"sourcesContent":["import { connect } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport NewQuestionContainer from \"./NewQuestionContainer\";\r\nimport CompletedQuestionContainer from \"./CompletedQuestionContainer\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst Dashboard = ({ authedUser, questions }) => {\r\n  const [newQuestions, setNewQuestions] = useState([]);\r\n  const [completedQuestions, setCompletedQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setCompletedQuestions(\r\n      questions\r\n        .filter(\r\n          (question) =>\r\n            question.optionOne.votes.includes(authedUser) ||\r\n            question.optionTwo.votes.includes(authedUser)\r\n        )\r\n        .sort((a, b) => b.timestamp - a.timestamp)\r\n    );\r\n\r\n    setNewQuestions(\r\n      questions\r\n        .filter(\r\n          (question) =>\r\n            !question.optionOne.votes.includes(authedUser) &&\r\n            !question.optionTwo.votes.includes(authedUser)\r\n        )\r\n        .sort((a, b) => b.timestamp - a.timestamp)\r\n    );\r\n  }, [authedUser, questions]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Nav />\r\n      </div>\r\n      <div>\r\n        <NewQuestionContainer newQuestions={newQuestions} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ questions, authedUser }) => ({\r\n  questions: Object.values(questions),\r\n  authedUser,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,MAAMC,SAAS,GAAG,QAA+B;EAAA;;EAAA,IAA9B;IAAEC,UAAF;IAAcC;EAAd,CAA8B;EAC/C,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACS,kBAAD,EAAqBC,qBAArB,IAA8CV,QAAQ,CAAC,EAAD,CAA5D;EAEAD,SAAS,CAAC,MAAM;IACdW,qBAAqB,CACnBJ,SAAS,CACNK,MADH,CAEKC,QAAD,IACEA,QAAQ,CAACC,SAAT,CAAmBC,KAAnB,CAAyBC,QAAzB,CAAkCV,UAAlC,KACAO,QAAQ,CAACI,SAAT,CAAmBF,KAAnB,CAAyBC,QAAzB,CAAkCV,UAAlC,CAJN,EAMGY,IANH,CAMQ,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,SAAF,GAAcF,CAAC,CAACE,SANlC,CADmB,CAArB;IAUAZ,eAAe,CACbF,SAAS,CACNK,MADH,CAEKC,QAAD,IACE,CAACA,QAAQ,CAACC,SAAT,CAAmBC,KAAnB,CAAyBC,QAAzB,CAAkCV,UAAlC,CAAD,IACA,CAACO,QAAQ,CAACI,SAAT,CAAmBF,KAAnB,CAAyBC,QAAzB,CAAkCV,UAAlC,CAJP,EAMGY,IANH,CAMQ,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,SAAF,GAAcF,CAAC,CAACE,SANlC,CADa,CAAf;EASD,CApBQ,EAoBN,CAACf,UAAD,EAAaC,SAAb,CApBM,CAAT;EAsBA,oBACE;IAAA,wBACE;MAAA,uBACE,QAAC,GAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,uBACE,QAAC,oBAAD;QAAsB,YAAY,EAAEC;MAApC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CApCD;;GAAMH,S;;KAAAA,S;;AAsCN,MAAMiB,eAAe,GAAG;EAAA,IAAC;IAAEf,SAAF;IAAaD;EAAb,CAAD;EAAA,OAAgC;IACtDC,SAAS,EAAEgB,MAAM,CAACC,MAAP,CAAcjB,SAAd,CAD2C;IAEtDD;EAFsD,CAAhC;AAAA,CAAxB;;AAKA,eAAeP,OAAO,CAACuB,eAAD,CAAP,CAAyBjB,SAAzB,CAAf"},"metadata":{},"sourceType":"module"}