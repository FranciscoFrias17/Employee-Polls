{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cisco\\\\Desktop\\\\Employee-Polls-Web-App\\\\polls\\\\src\\\\components\\\\QuestionDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { handleSaveQuestionAnswer } from \"../actions/questions\";\nimport { useNavigate } from \"react-router-dom\";\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuestionDetail(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [selectedAnswer, setSelectedAnswer] = useState({\n    optionOne: \"\",\n    optionTwo: \"\"\n  });\n  useEffect(() => {\n    if (props.authedUser) {\n      setSelectedAnswer({\n        optionOne: \"\",\n        optionTwo: \"\"\n      });\n    }\n  }, [props.authedUser]);\n\n  const handleChange = e => {\n    const value = e.target.value;\n    const name = e.target.name;\n\n    if (name === \"optionOneText\") {\n      setSelectedAnswer({ ...selectedAnswer,\n        optionOne: value\n      });\n    }\n\n    if (name === \"optionTwoText\") {\n      setSelectedAnswer({ ...selectedAnswer,\n        optionTwo: value\n      });\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"The New Question:\", selectedAnswer);\n    dispatch(handleSaveQuestionAnswer(props.question.id, selectedAnswer));\n    setSelectedAnswer({\n      optionOne: \"\",\n      optionTwo: \"\"\n    });\n    navigate(\"/\");\n  };\n\n  const {\n    id,\n    author,\n    timestamp,\n    optionOne,\n    optionTwo\n  } = props.question;\n  const {\n    name,\n    avatarURL\n  } = props;\n  const {\n    optionOneText,\n    optionTwoText\n  } = selectedAnswer;\n\n  const optionOnePercentage = () => {\n    const optionOneVotes = optionOne.votes.length;\n    const optionTwoVotes = optionTwo.votes.length;\n    const totalVotes = optionOneVotes + optionTwoVotes;\n    return optionOneVotes / totalVotes * 100;\n  };\n\n  const optionTwoPercentage = () => {\n    const optionOneVotes = optionOne.votes.length;\n    const optionTwoVotes = optionTwo.votes.length;\n    const totalVotes = optionOneVotes + optionTwoVotes;\n    return optionTwoVotes / totalVotes * 100;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Would you rather: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuestionDetail, \"tRxHuw6ppoyouFUvKj+q2JHHC5M=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = QuestionDetail;\n\nconst mapStateToProps = (_ref, _ref2) => {\n  let {\n    users,\n    authedUser\n  } = _ref;\n  let {\n    questions\n  } = _ref2;\n  const user = users[authedUser];\n  const {\n    name,\n    avatarURL\n  } = user;\n  return {\n    name,\n    avatarURL,\n    questions: Object.keys(questions).map(questionId => {\n      return questions[questionId];\n    })\n  };\n};\n\nexport default connect(mapStateToProps)(QuestionDetail);\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionDetail\");","map":{"version":3,"names":["useState","useEffect","connect","useDispatch","handleSaveQuestionAnswer","useNavigate","Nav","QuestionDetail","props","dispatch","navigate","selectedAnswer","setSelectedAnswer","optionOne","optionTwo","authedUser","handleChange","e","value","target","name","handleSubmit","preventDefault","console","log","question","id","author","timestamp","avatarURL","optionOneText","optionTwoText","optionOnePercentage","optionOneVotes","votes","length","optionTwoVotes","totalVotes","optionTwoPercentage","mapStateToProps","users","questions","user","Object","keys","map","questionId"],"sources":["C:/Users/Cisco/Desktop/Employee-Polls-Web-App/polls/src/components/QuestionDetail.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { handleSaveQuestionAnswer } from \"../actions/questions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Nav from \"./Nav\";\r\n\r\nfunction QuestionDetail(props) {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [selectedAnswer, setSelectedAnswer] = useState({\r\n    optionOne: \"\",\r\n    optionTwo: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (props.authedUser) {\r\n      setSelectedAnswer({\r\n        optionOne: \"\",\r\n        optionTwo: \"\",\r\n      });\r\n    }\r\n  }, [props.authedUser]);\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    if (name === \"optionOneText\") {\r\n      setSelectedAnswer({\r\n        ...selectedAnswer,\r\n        optionOne: value,\r\n      });\r\n    }\r\n    if (name === \"optionTwoText\") {\r\n      setSelectedAnswer({\r\n        ...selectedAnswer,\r\n        optionTwo: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"The New Question:\", selectedAnswer);\r\n    dispatch(handleSaveQuestionAnswer(props.question.id, selectedAnswer));\r\n    setSelectedAnswer({\r\n      optionOne: \"\",\r\n      optionTwo: \"\",\r\n    });\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const { id, author, timestamp, optionOne, optionTwo } = props.question;\r\n  const { name, avatarURL } = props;\r\n  const { optionOneText, optionTwoText } = selectedAnswer;\r\n\r\n  const optionOnePercentage = () => {\r\n    const optionOneVotes = optionOne.votes.length;\r\n    const optionTwoVotes = optionTwo.votes.length;\r\n    const totalVotes = optionOneVotes + optionTwoVotes;\r\n    return (optionOneVotes / totalVotes) * 100;\r\n  };\r\n\r\n  const optionTwoPercentage = () => {\r\n    const optionOneVotes = optionOne.votes.length;\r\n    const optionTwoVotes = optionTwo.votes.length;\r\n    const totalVotes = optionOneVotes + optionTwoVotes;\r\n    return (optionTwoVotes / totalVotes) * 100;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Nav />\r\n      </div>\r\n      <h2>Would you rather: </h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ users, authedUser }, { questions }) => {\r\n  const user = users[authedUser];\r\n  const { name, avatarURL } = user;\r\n  return {\r\n    name,\r\n    avatarURL,\r\n\r\n    questions: Object.keys(questions).map((questionId) => {\r\n      return questions[questionId];\r\n    }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(QuestionDetail);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}