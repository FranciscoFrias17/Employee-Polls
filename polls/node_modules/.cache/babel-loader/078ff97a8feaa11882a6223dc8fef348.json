{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cisco\\\\Desktop\\\\Employee-Polls-Web-App\\\\polls\\\\src\\\\components\\\\QuestionDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { handleSaveQuestionAnswer } from \"../actions/questions\";\nimport { useNavigate } from \"react-router-dom\";\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuestionDetail(_ref) {\n  _s();\n\n  let {\n    authedUser,\n    question\n  } = _ref;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [selectedAnswer, setSelectedAnswer] = useState({\n    optionOne: \"\",\n    optionTwo: \"\"\n  });\n\n  const optionOnePercentage = () => {\n    const optionOneVotes = question.optionOne.votes.length;\n    const optionTwoVotes = question.optionTwo.votes.length;\n    const totalVotes = optionOneVotes + optionTwoVotes;\n    return optionOneVotes / totalVotes * 100;\n  };\n\n  const optionTwoPercentage = () => {\n    const optionOneVotes = question.optionOne.votes.length;\n    const optionTwoVotes = question.optionTwo.votes.length;\n    const totalVotes = optionOneVotes + optionTwoVotes;\n    return optionTwoVotes / totalVotes * 100;\n  };\n\n  const selectedAnswerValue = {\n    authedUser: authedUser.id,\n    qid: question.id,\n    answer: selectedAnswer\n  };\n\n  const saveSelectedAnswer = () => {\n    dispatch(handleSaveQuestionAnswer(selectedAnswerValue));\n  };\n\n  useEffect(() => {\n    if (question.optionOne.votes.includes(authedUser.id)) {\n      setSelectedAnswer({\n        optionOne: \"selected\"\n      });\n    }\n\n    if (question.optionTwo.votes.includes(authedUser.id)) {\n      setSelectedAnswer({\n        optionTwo: \"selected\"\n      });\n    }\n  }, [question, authedUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Question by: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: question.author.avatarURL,\n      alt: `Avatar of ${question.author.name}`,\n      className: \"avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), question.author.name, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Would you rather?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuestionDetail, \"tRxHuw6ppoyouFUvKj+q2JHHC5M=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = QuestionDetail;\n\nconst mapStateToProps = _ref2 => {\n  let {\n    authedUser,\n    questions\n  } = _ref2;\n  return {\n    questions: Object.keys(questions).map(id => {\n      return questions[id];\n    }),\n    authedUser\n  };\n};\n\nexport default connect(mapStateToProps)(QuestionDetail);\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionDetail\");","map":{"version":3,"names":["useState","useEffect","connect","useDispatch","handleSaveQuestionAnswer","useNavigate","Nav","QuestionDetail","authedUser","question","dispatch","navigate","selectedAnswer","setSelectedAnswer","optionOne","optionTwo","optionOnePercentage","optionOneVotes","votes","length","optionTwoVotes","totalVotes","optionTwoPercentage","selectedAnswerValue","id","qid","answer","saveSelectedAnswer","includes","author","avatarURL","name","mapStateToProps","questions","Object","keys","map"],"sources":["C:/Users/Cisco/Desktop/Employee-Polls-Web-App/polls/src/components/QuestionDetail.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { handleSaveQuestionAnswer } from \"../actions/questions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Nav from \"./Nav\";\r\n\r\nfunction QuestionDetail({ authedUser, question }) {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [selectedAnswer, setSelectedAnswer] = useState({\r\n    optionOne: \"\",\r\n    optionTwo: \"\",\r\n  });\r\n\r\n  const optionOnePercentage = () => {\r\n    const optionOneVotes = question.optionOne.votes.length;\r\n    const optionTwoVotes = question.optionTwo.votes.length;\r\n    const totalVotes = optionOneVotes + optionTwoVotes;\r\n    return (optionOneVotes / totalVotes) * 100;\r\n  };\r\n\r\n  const optionTwoPercentage = () => {\r\n    const optionOneVotes = question.optionOne.votes.length;\r\n    const optionTwoVotes = question.optionTwo.votes.length;\r\n    const totalVotes = optionOneVotes + optionTwoVotes;\r\n    return (optionTwoVotes / totalVotes) * 100;\r\n  };\r\n\r\n  const selectedAnswerValue = {\r\n    authedUser: authedUser.id,\r\n    qid: question.id,\r\n    answer: selectedAnswer,\r\n  };\r\n\r\n  const saveSelectedAnswer = () => {\r\n    dispatch(handleSaveQuestionAnswer(selectedAnswerValue));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (question.optionOne.votes.includes(authedUser.id)) {\r\n      setSelectedAnswer({ optionOne: \"selected\" });\r\n    }\r\n    if (question.optionTwo.votes.includes(authedUser.id)) {\r\n      setSelectedAnswer({ optionTwo: \"selected\" });\r\n    }\r\n  }, [question, authedUser]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Nav />\r\n      </div>\r\n      <h2>Question by: </h2>\r\n      <img\r\n        src={question.author.avatarURL}\r\n        alt={`Avatar of ${question.author.name}`}\r\n        className='avatar'\r\n      />\r\n      {question.author.name}\r\n      <h2>Would you rather?</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ authedUser, questions }) => {\r\n  return {\r\n    questions: Object.keys(questions).map((id) => {\r\n      return questions[id];\r\n    }),\r\n    authedUser,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(QuestionDetail);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}