{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cisco\\\\Desktop\\\\Employee-Polls-Web-App\\\\polls\\\\src\\\\components\\\\Dashboard.js\";\nimport { connect } from \"react-redux\";\nimport Question from \"./Question\";\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"New Polls:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: props.QuestionIds.map(id => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Question, {\n              id: id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 17\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dashboard;\n\nconst mapStateToProps = _ref => {\n  let {\n    questions\n  } = _ref;\n  return {\n    QuestionIds: Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp)\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["connect","Question","Nav","Dashboard","props","QuestionIds","map","id","mapStateToProps","questions","Object","keys","sort","a","b","timestamp"],"sources":["C:/Users/Cisco/Desktop/Employee-Polls-Web-App/polls/src/components/Dashboard.js"],"sourcesContent":["import { connect } from \"react-redux\";\r\nimport Question from \"./Question\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst Dashboard = (props) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Nav />\r\n      </div>\r\n      <div>\r\n        <h3>New Polls:</h3>\r\n        <ul>\r\n          {props.QuestionIds.map((id) => {\r\n            return (\r\n              <li key={id}>\r\n                <Question id={id} />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ questions }) => ({\r\n  QuestionIds: Object.keys(questions).sort(\r\n    (a, b) => questions[b].timestamp - questions[a].timestamp\r\n  ),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAC3B,oBACE;IAAA,wBACE;MAAA,uBACE,QAAC,GAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UACGA,KAAK,CAACC,WAAN,CAAkBC,GAAlB,CAAuBC,EAAD,IAAQ;UAC7B,oBACE;YAAA,uBACE,QAAC,QAAD;cAAU,EAAE,EAAEA;YAAd;cAAA;cAAA;cAAA;YAAA;UADF,GAASA,EAAT;YAAA;YAAA;YAAA;UAAA,QADF;QAKD,CANA;MADH;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CApBD;;KAAMJ,S;;AAsBN,MAAMK,eAAe,GAAG;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OAAoB;IAC1CJ,WAAW,EAAEK,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,IAAvB,CACX,CAACC,CAAD,EAAIC,CAAJ,KAAUL,SAAS,CAACK,CAAD,CAAT,CAAaC,SAAb,GAAyBN,SAAS,CAACI,CAAD,CAAT,CAAaE,SADrC;EAD6B,CAApB;AAAA,CAAxB;;AAMA,eAAef,OAAO,CAACQ,eAAD,CAAP,CAAyBL,SAAzB,CAAf"},"metadata":{},"sourceType":"module"}