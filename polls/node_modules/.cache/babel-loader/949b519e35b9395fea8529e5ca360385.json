{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cisco\\\\Desktop\\\\Employee-Polls-Web-App\\\\polls\\\\src\\\\components\\\\QuestionDetail.js\";\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleSaveQuestionAnswer } from \"../actions/questions\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { formatDate } from \"../utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst withRouter = Component => {\n  var _s = $RefreshSig$();\n\n  const ComponentWithRouterProps = props => {\n    _s();\n\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  };\n\n  _s(ComponentWithRouterProps, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n\n  return ComponentWithRouterProps;\n};\n\nfunction QuestionDetail(props) {\n  const {\n    authedUser,\n    question,\n    users\n  } = props;\n  const {\n    author,\n    optionOne,\n    optionTwo,\n    timestamp,\n    id\n  } = question;\n  const avatar = users[author].avatarURL;\n  const name = users[author].name;\n\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This Question doesn't exist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: avatar,\n      alt: `Avatar of ${name}`,\n      className: \"avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_c = QuestionDetail;\n\nconst mapStateToProps = (_ref, _ref2) => {\n  let {\n    users,\n    authedUser\n  } = _ref;\n  let {\n    question\n  } = _ref2;\n  return {\n    authedUser,\n    question,\n    users\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(QuestionDetail));\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionDetail\");","map":{"version":3,"names":["useState","useEffect","connect","handleSaveQuestionAnswer","useLocation","useNavigate","useParams","formatDate","withRouter","Component","ComponentWithRouterProps","props","location","navigate","params","QuestionDetail","authedUser","question","users","author","optionOne","optionTwo","timestamp","id","avatar","avatarURL","name","mapStateToProps"],"sources":["C:/Users/Cisco/Desktop/Employee-Polls-Web-App/polls/src/components/QuestionDetail.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleSaveQuestionAnswer } from \"../actions/questions\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { formatDate } from \"../utils/helpers\";\r\n\r\nconst withRouter = (Component) => {\r\n  const ComponentWithRouterProps = (props) => {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return <Component {...props} router={{ location, navigate, params }} />;\r\n  };\r\n\r\n  return ComponentWithRouterProps;\r\n};\r\n\r\nfunction QuestionDetail(props) {\r\n  const { authedUser, question, users } = props;\r\n  const { author, optionOne, optionTwo, timestamp, id } = question;\r\n  const avatar = users[author].avatarURL;\r\n  const name = users[author].name;\r\n\r\n  if (!question) {\r\n    return <p>This Question doesn't exist</p>;\r\n  }\r\n\r\n  return (\r\n    <div className='question'>\r\n      <img src={avatar} alt={`Avatar of ${name}`} className='avatar' />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ users, authedUser }, { question }) => {\r\n  return { authedUser, question, users };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(QuestionDetail));\r\n"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,SAAnC,QAAoD,kBAApD;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,UAAU,GAAIC,SAAD,IAAe;EAAA;;EAChC,MAAMC,wBAAwB,GAAIC,KAAD,IAAW;IAAA;;IAC1C,IAAIC,QAAQ,GAAGR,WAAW,EAA1B;IACA,IAAIS,QAAQ,GAAGR,WAAW,EAA1B;IACA,IAAIS,MAAM,GAAGR,SAAS,EAAtB;IACA,oBAAO,QAAC,SAAD,OAAeK,KAAf;MAAsB,MAAM,EAAE;QAAEC,QAAF;QAAYC,QAAZ;QAAsBC;MAAtB;IAA9B;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CALD;;EADgC,GAC1BJ,wBAD0B;IAAA,QAEfN,WAFe,EAGfC,WAHe,EAIjBC,SAJiB;EAAA;;EAQhC,OAAOI,wBAAP;AACD,CATD;;AAWA,SAASK,cAAT,CAAwBJ,KAAxB,EAA+B;EAC7B,MAAM;IAAEK,UAAF;IAAcC,QAAd;IAAwBC;EAAxB,IAAkCP,KAAxC;EACA,MAAM;IAAEQ,MAAF;IAAUC,SAAV;IAAqBC,SAArB;IAAgCC,SAAhC;IAA2CC;EAA3C,IAAkDN,QAAxD;EACA,MAAMO,MAAM,GAAGN,KAAK,CAACC,MAAD,CAAL,CAAcM,SAA7B;EACA,MAAMC,IAAI,GAAGR,KAAK,CAACC,MAAD,CAAL,CAAcO,IAA3B;;EAEA,IAAI,CAACT,QAAL,EAAe;IACb,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,uBACE;MAAK,GAAG,EAAEO,MAAV;MAAkB,GAAG,EAAG,aAAYE,IAAK,EAAzC;MAA4C,SAAS,EAAC;IAAtD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;KAfQX,c;;AAiBT,MAAMY,eAAe,GAAG,iBAAyC;EAAA,IAAxC;IAAET,KAAF;IAASF;EAAT,CAAwC;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/D,OAAO;IAAED,UAAF;IAAcC,QAAd;IAAwBC;EAAxB,CAAP;AACD,CAFD;;AAIA,eAAeV,UAAU,CAACN,OAAO,CAACyB,eAAD,CAAP,CAAyBZ,cAAzB,CAAD,CAAzB"},"metadata":{},"sourceType":"module"}