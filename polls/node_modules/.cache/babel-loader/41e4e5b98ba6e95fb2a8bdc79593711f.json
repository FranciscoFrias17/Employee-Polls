{"ast":null,"code":"import { RECEIVE_USERS } from \"../actions/users\";\nimport { ADD_ANSWER_TO_USER } from \"../actions/users\";\nimport { ADD_QUESTION_TO_USER } from \"../actions/users\";\nexport function users() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_USERS:\n      return { ...state,\n        ...action.users\n      };\n\n    case ADD_ANSWER_TO_USER:\n      const {\n        authedUser,\n        qid,\n        answer\n      } = action;\n      return { ...state,\n        [authedUser]: { ...state[authedUser],\n          answers: { ...state[authedUser].answers,\n            [qid]: answer\n          }\n        }\n      };\n\n    case ADD_QUESTION_TO_USER:\n      const {\n        id,\n        author\n      } = action;\n      return { ...state,\n        [author]: { ...state[author],\n          questions: state[author].questions.concat([id])\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["RECEIVE_USERS","ADD_ANSWER_TO_USER","ADD_QUESTION_TO_USER","users","state","action","type","authedUser","qid","answer","answers","id","author","questions","concat"],"sources":["C:/Users/Cisco/Desktop/Employee-Polls/polls/src/reducers/users.js"],"sourcesContent":["import { RECEIVE_USERS } from \"../actions/users\";\r\nimport { ADD_ANSWER_TO_USER } from \"../actions/users\";\r\nimport { ADD_QUESTION_TO_USER } from \"../actions/users\";\r\n\r\nexport function users(state = {}, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USERS:\r\n      return {\r\n        ...state,\r\n        ...action.users,\r\n      };\r\n    case ADD_ANSWER_TO_USER:\r\n      const { authedUser, qid, answer } = action;\r\n      return {\r\n        ...state,\r\n        [authedUser]: {\r\n          ...state[authedUser],\r\n          answers: {\r\n            ...state[authedUser].answers,\r\n            [qid]: answer,\r\n          },\r\n        },\r\n      };\r\n    case ADD_QUESTION_TO_USER:\r\n      const { id, author } = action;\r\n      return {\r\n        ...state,\r\n        [author]: {\r\n          ...state[author],\r\n          questions: state[author].questions.concat([id]),\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AAEA,OAAO,SAASC,KAAT,GAAmC;EAAA,IAApBC,KAAoB,uEAAZ,EAAY;EAAA,IAARC,MAAQ;;EACxC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKN,aAAL;MACE,OAAO,EACL,GAAGI,KADE;QAEL,GAAGC,MAAM,CAACF;MAFL,CAAP;;IAIF,KAAKF,kBAAL;MACE,MAAM;QAAEM,UAAF;QAAcC,GAAd;QAAmBC;MAAnB,IAA8BJ,MAApC;MACA,OAAO,EACL,GAAGD,KADE;QAEL,CAACG,UAAD,GAAc,EACZ,GAAGH,KAAK,CAACG,UAAD,CADI;UAEZG,OAAO,EAAE,EACP,GAAGN,KAAK,CAACG,UAAD,CAAL,CAAkBG,OADd;YAEP,CAACF,GAAD,GAAOC;UAFA;QAFG;MAFT,CAAP;;IAUF,KAAKP,oBAAL;MACE,MAAM;QAAES,EAAF;QAAMC;MAAN,IAAiBP,MAAvB;MACA,OAAO,EACL,GAAGD,KADE;QAEL,CAACQ,MAAD,GAAU,EACR,GAAGR,KAAK,CAACQ,MAAD,CADA;UAERC,SAAS,EAAET,KAAK,CAACQ,MAAD,CAAL,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,CAACH,EAAD,CAA/B;QAFH;MAFL,CAAP;;IAOF;MACE,OAAOP,KAAP;EA5BJ;AA8BD"},"metadata":{},"sourceType":"module"}